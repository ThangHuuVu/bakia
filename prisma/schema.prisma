generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Gene {
  id          Int         @id @default(autoincrement())
  image       String
  name        String
  description String
  price       Int
  currency    Currency    @relation(fields: [currencyId], references: [id])
  currencyId  Int
  OrderItem   OrderItem[]
}

model Product {
  id         Int              @id @default(autoincrement())
  name       String
  variants   ProductVariant[]
  category   Category         @relation(fields: [categoryId], references: [id])
  categoryId Int
  base       Product?         @relation("ProductToProduct", fields: [baseId], references: [id])
  addons     Product[]        @relation("ProductToProduct")
  baseId     Int?
}

model Currency {
  id               Int              @id @default(autoincrement())
  name             String
  abbreviationSign String
  genes            Gene[]
  productVariants  ProductVariant[]
}

model ProductVariant {
  id          Int           @id @default(autoincrement())
  thumbnail   String
  image       String
  name        String
  price       Int
  currency    Currency      @relation(fields: [currencyId], references: [id])
  product     Product       @relation(fields: [productId], references: [id])
  productId   Int
  color       VariantColor? @relation(fields: [colorId], references: [id])
  colorId     Int?
  currencyId  Int
  OrderItem   OrderItem?    @relation(fields: [orderItemId], references: [id])
  orderItemId String?
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String
  layer     Int?
  thumbnail String
  products  Product[]
  parent    Category?  @relation("CategoryToCategory", fields: [parentId], references: [id])
  children  Category[] @relation("CategoryToCategory")
  parentId  Int?
}

model VariantColor {
  id       Int              @id @default(autoincrement())
  name     String
  code     String
  variants ProductVariant[]
}

model DiscountCode {
  id         Int         @id @default(autoincrement())
  code       String
  limit      Int
  orderItems OrderItem[]
}

enum Gender {
  MAlE
  FEMALE
}

enum ShippingMethod {
  FAST
  STANDARD
}

enum PaymentMethod {
  BANK
  EWALLET
}

model User {
  id             Int            @id @default(autoincrement())
  fullName       String
  email          String
  phoneNumber    String
  gender         Gender
  area           String
  address        String
  shippingMethod ShippingMethod
  note           String
  orders         Order[]
}

model OrderItem {
  id              String           @id
  discountCode    DiscountCode?    @relation(fields: [discountCodeId], references: [id])
  discountCodeId  Int?
  quantity        Int
  total           Int
  productVariants ProductVariant[]
  gene            Gene             @relation(fields: [geneId], references: [id])
  geneId          Int
  Order           Order?           @relation(fields: [orderId], references: [id])
  orderId         String?
}

enum OrderStatus {
  PENDING
  COMPLETED
  ERROR
}

model Order {
  id                String        @id
  user              User          @relation(fields: [userId], references: [id])
  userId            Int
  paymentMethod     PaymentMethod
  accountHolderName String
  accountNumber     String
  items             OrderItem[]
  total             Int
  status            OrderStatus
}
